
export const _ADDRESS = 0 << 4;
//********* команды обмена данными поддерживаемые устройством **************
export enum ECommands {

//----------- широковещательные команды------------------------
// синхронизация времени на поверхности (постановка на задержку)
    CMD_TIME_SYNC 	= 0xF5, // реализация обязательно
// синхронизация времени во время работы в скважине
    CMD_BEACON  	= 0xFA,
// режим повышеной скорости для чтения внешней памяти
    CMD_TURBO 		= 0xFD, // реализация если есть соответствующие метаданные
// -----------команды по адресу ---------------------------------
// чтение внешней памяти
    CMD_ERAM    	= (0x01 | _ADDRESS), // реализация если есть
// чтение информации об устройстве (дескриптор устройства, метаданные)
    CMD_INFO    	= (0x02 | _ADDRESS), // реализация обязательно
//
//
// чтение EEPROM памяти
    CMD_READ_EE  	= (0x05 | _ADDRESS), // реализация если есть соответствующие  метаданные
// запись EEPROM памяти
    CMD_WRITE_EE  	= (0x06 | _ADDRESS),  // реализация если есть соответствующие  метаданные
// текущие состоание и данные (режим информации)
    CMD_WORK      	= (0x07 | _ADDRESS), // реализация обязательно
// bootloader
    CMD_BOOT      	= (0x08 | _ADDRESS), // реализация если есть бутлоадер

// запись внешней памяти ТОЛЬКО В ТЕСТОВЫХ ЦЕЛЯХ
    CMD_ERAM_WRITE 	= (0x09 | _ADDRESS),
// стирание внешней памяти ТОЛЬКО В ТЕСТОВЫХ ЦЕЛЯХ
    CMD_ERAM_CLEAR  = (0x0A | _ADDRESS),
//  ТОЛЬКО В ТЕСТОВЫХ ЦЕЛЯХ
    CMD_INCL 		= (0x0B | _ADDRESS),
// установка страницы для записи ТОЛЬКО В ТЕСТОВЫХ ЦЕЛЯХ
CMD_ERAM_SET_BASE 	= (0x0C | _ADDRESS),

// обработка ошибок 
	CMD_ERR   		= (0x0E | _ADDRESS),  // реализация если есть
	CMD_BOOT_EXIT	= (0x0E | _ADDRESS),  // bootloader
CMD_BOOT_PROGRAM	= (0x0F | _ADDRESS),  // bootloader

// -----------команды по адресу 32 ---------------------------------
// поиск устройств с расширенным адресом
	FIND_DEV 		= 0x0F //LLLL HHHH маска для поиска 32 bit address
}

